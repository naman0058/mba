{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isNode } from \"@azure/core-http\";\nimport * as os from \"os\";\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n/**\n * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.\n */\n\nexport class TelemetryPolicyFactory {\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param telemetry -\n   */\n  constructor(telemetry) {\n    const userAgentInfo = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = telemetry.userAgentPrefix || \"\";\n\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      } // e.g. azsdk-js-storageblob/10.0.0\n\n\n      const libInfo = `azsdk-js-storageblob/${SDK_VERSION}`;\n\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      } // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n\n\n      let runtimeInfo = `(NODE-VERSION ${process.version})`;\n\n      if (os) {\n        runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      }\n\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n  /**\n   * Creates a TelemetryPolicy object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n\n\n  create(nextPolicy, options) {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n\n}","map":{"version":3,"sources":["../../../src/TelemetryPolicyFactory.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SACE,MADF,QAMO,kBANP;AAOA,OAAO,KAAK,EAAZ,MAAoB,IAApB;AAEA,SAAS,eAAT,QAAgC,4BAAhC;AACA,SAAS,WAAT,QAA4B,mBAA5B;AAEA;;AAEG;;AACH,OAAM,MAAO,sBAAP,CAA6B;AAMjC;;;AAGG;AACH,EAAA,WAAA,CAAY,SAAZ,EAAwC;AACtC,UAAM,aAAa,GAAa,EAAhC;;AAEA,QAAI,MAAJ,EAAY;AACV,UAAI,SAAJ,EAAe;AACb,cAAM,eAAe,GAAG,SAAS,CAAC,eAAV,IAA6B,EAArD;;AACA,YAAI,eAAe,CAAC,MAAhB,GAAyB,CAAzB,IAA8B,aAAa,CAAC,OAAd,CAAsB,eAAtB,MAA2C,CAAC,CAA9E,EAAiF;AAC/E,UAAA,aAAa,CAAC,IAAd,CAAmB,eAAnB;AACD;AACF,OANS,CAQV;;;AACA,YAAM,OAAO,GAAG,wBAAwB,WAAW,EAAnD;;AACA,UAAI,aAAa,CAAC,OAAd,CAAsB,OAAtB,MAAmC,CAAC,CAAxC,EAA2C;AACzC,QAAA,aAAa,CAAC,IAAd,CAAmB,OAAnB;AACD,OAZS,CAcV;;;AACA,UAAI,WAAW,GAAG,iBAAiB,OAAO,CAAC,OAAO,GAAlD;;AACA,UAAI,EAAJ,EAAQ;AACN,QAAA,WAAW,GAAG,iBAAiB,OAAO,CAAC,OAAO,KAAK,EAAE,CAAC,IAAH,EAAS,IAAI,EAAE,CAAC,OAAH,EAAY,GAA5E;AACD;;AACD,UAAI,aAAa,CAAC,OAAd,CAAsB,WAAtB,MAAuC,CAAC,CAA5C,EAA+C;AAC7C,QAAA,aAAa,CAAC,IAAd,CAAmB,WAAnB;AACD;AACF;;AAED,SAAK,eAAL,GAAuB,aAAa,CAAC,IAAd,CAAmB,GAAnB,CAAvB;AACD;AAED;;;;;AAKG;;;AACI,EAAA,MAAM,CAAC,UAAD,EAA4B,OAA5B,EAAyD;AACpE,WAAO,IAAI,eAAJ,CAAoB,UAApB,EAAgC,OAAhC,EAAyC,KAAK,eAA9C,CAAP;AACD;;AAhDgC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  isNode,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  UserAgentOptions,\n} from \"@azure/core-http\";\nimport * as os from \"os\";\n\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n\n/**\n * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.\n */\nexport class TelemetryPolicyFactory implements RequestPolicyFactory {\n  /**\n   * @internal\n   */\n  public readonly telemetryString: string;\n\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param telemetry -\n   */\n  constructor(telemetry?: UserAgentOptions) {\n    const userAgentInfo: string[] = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = telemetry.userAgentPrefix || \"\";\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      }\n\n      // e.g. azsdk-js-storageblob/10.0.0\n      const libInfo = `azsdk-js-storageblob/${SDK_VERSION}`;\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      }\n\n      // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n      let runtimeInfo = `(NODE-VERSION ${process.version})`;\n      if (os) {\n        runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      }\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n\n  /**\n   * Creates a TelemetryPolicy object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TelemetryPolicy {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}