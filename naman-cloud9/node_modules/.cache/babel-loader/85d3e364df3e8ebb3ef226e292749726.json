{"ast":null,"code":"var _jsxFileName = \"D:\\\\naman-cloud9\\\\naman-cloud9\\\\src\\\\pages\\\\MyDashboard.js\";\nimport React from 'react';\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\nexport default class NEWAPI extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data1: [],\n      refreshing: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:4000/dashboard', {\n      method: 'GET',\n      // mode: 'no-cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json()).catch(error => console.error('Error', error)).then(result => {\n      console.log('result', result);\n\n      if (result) {\n        this.setState({\n          refreshing: false,\n          data1: result //setstate of data which is convert in to fetch data and pass them in to component see below\n\n        }); // alert(result[0].timeleft)\n      } else {\n        this.setState({\n          refreshing: false,\n          data1: ['result'] //setstate of data which is convert in to fetch data and pass them in to component see below\n\n        });\n      }\n    });\n  }\n\n  render() {\n    let list = this.state.data1;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n;","map":{"version":3,"sources":["D:/naman-cloud9/naman-cloud9/src/pages/MyDashboard.js"],"names":["React","moment","Datetime","FontAwesomeIcon","faSearch","faCalendarAlt","Col","Row","Nav","Card","Image","Button","Table","Dropdown","ProgressBar","Pagination","ButtonGroup","NEWAPI","Component","state","data1","refreshing","componentDidMount","fetch","method","headers","then","response","json","catch","error","console","result","log","setState","render","list"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,mCAAxC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoDC,QAApD,EAA8DC,WAA9D,EAA2EC,UAA3E,EAAuFC,WAAvF,QAA0G,6BAA1G;AAKA,eAAe,MAAMC,MAAN,SAAqBjB,KAAK,CAACkB,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAMlDC,KANkD,GAM1C;AACNC,MAAAA,KAAK,EAAG,EADF;AAENC,MAAAA,UAAU,EAAC;AAFL,KAN0C;AAAA;;AAYpDC,EAAAA,iBAAiB,GAAE;AACnBC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,MAAAA,MAAM,EAAE,KAD6B;AAErC;AACJC,MAAAA,OAAO,EAAE;AACT,uCAA8B;AADrB;AAHgC,KAApC,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQKC,KARL,CAQYC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CARtB,EASKJ,IATL,CASWM,MAAD,IAAY;AACpBD,MAAAA,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAqBD,MAArB;;AACI,UAAIA,MAAJ,EAAY;AACV,aAAKE,QAAL,CAAc;AACZb,UAAAA,UAAU,EAAE,KADA;AAEZD,UAAAA,KAAK,EAAEY,MAFK,CAEG;;AAFH,SAAd,EADU,CAOV;AAGD,OAVD,MAUO;AACL,aAAKE,QAAL,CAAc;AACZb,UAAAA,UAAU,EAAE,KADA;AAEZD,UAAAA,KAAK,EAAE,CAAC,QAAD,CAFK,CAEO;;AAFP,SAAd;AAID;AACF,KA3BL;AA6BC;;AAEDe,EAAAA,MAAM,GAAE;AAIN,QAAIC,IAAI,GAAG,KAAKjB,KAAL,CAAWC,KAAtB;AAKA,wBACE,uDAIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJI,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,eAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPJ,CADF;AA0BD;;AA/EmD;AAgFnD","sourcesContent":["import React from 'react';\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\n\r\n\r\n\r\nexport default class NEWAPI extends React.Component {\r\n\r\n\r\n\r\n\r\n\r\n  state = {\r\n    data1 : [],\r\n    refreshing:false\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\nfetch('http://localhost:4000/dashboard', {\r\n    method: 'GET',\r\n    // mode: 'no-cors',\r\nheaders: {\r\n'Access-Control-Allow-Origin':'*'\r\n}\r\n  })\r\n  .then((response) => response.json())\r\n    .catch((error) => console.error('Error', error))\r\n    .then((result) => {\r\n  console.log('result',result)\r\n      if (result) {\r\n        this.setState({\r\n          refreshing: false,\r\n          data1: result, //setstate of data which is convert in to fetch data and pass them in to component see below\r\n        });\r\n\r\n     \r\n        // alert(result[0].timeleft)\r\n\r\n\r\n      } else {\r\n        this.setState({\r\n          refreshing: false,\r\n          data1: ['result'], //setstate of data which is convert in to fetch data and pass them in to component see below\r\n        });\r\n      }\r\n    });\r\n\r\n}\r\n\r\nrender(){\r\n\r\n\r\n\r\n  let list = this.state.data1\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n  \r\n\r\n\r\n<br/><br/>\r\n\r\n \r\n        <div className='container'>\r\n          <div className='row'>\r\n            \r\n        \r\n\r\n\r\n\r\n\r\n         \r\n</div>\r\n        </div>\r\n          {/* </tbody>\r\n        </Table> */}\r\n   \r\n\r\n    </>\r\n  );\r\n  \r\n}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}