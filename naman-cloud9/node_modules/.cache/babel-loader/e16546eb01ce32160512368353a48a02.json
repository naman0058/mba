{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nexport function isDefined(thing) {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\n\nexport function isObjectWithProperties(thing, properties) {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\n\nexport function objectHasProperty(thing, property) {\n  return isDefined(thing) && typeof thing === \"object\" && property in thing;\n}","map":{"version":3,"sources":["../../src/typeGuards.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA;;;AAGG;AACH,OAAM,SAAU,SAAV,CAAuB,KAAvB,EAAkD;AACtD,SAAO,OAAO,KAAP,KAAiB,WAAjB,IAAgC,KAAK,KAAK,IAAjD;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,sBAAV,CACJ,KADI,EAEJ,UAFI,EAEsB;AAE1B,MAAI,CAAC,SAAS,CAAC,KAAD,CAAV,IAAqB,OAAO,KAAP,KAAiB,QAA1C,EAAoD;AAClD,WAAO,KAAP;AACD;;AAED,OAAK,MAAM,QAAX,IAAuB,UAAvB,EAAmC;AACjC,QAAI,CAAC,iBAAiB,CAAC,KAAD,EAAQ,QAAR,CAAtB,EAAyC;AACvC,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,iBAAV,CACJ,KADI,EAEJ,QAFI,EAEkB;AAEtB,SACE,SAAS,CAAC,KAAD,CAAT,IAAoB,OAAO,KAAP,KAAiB,QAArC,IAAiD,QAAQ,IAAK,KADhE;AAGD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nexport function isDefined<T>(thing: T | undefined | null): thing is T {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nexport function isObjectWithProperties<Thing, PropertyName extends string>(\n  thing: Thing,\n  properties: PropertyName[]\n): thing is Thing & Record<PropertyName, unknown> {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nexport function objectHasProperty<Thing, PropertyName extends string>(\n  thing: Thing,\n  property: PropertyName\n): thing is Thing & Record<PropertyName, unknown> {\n  return (\n    isDefined(thing) && typeof thing === \"object\" && property in (thing as Record<string, unknown>)\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}