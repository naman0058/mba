{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Function that converts PageRange and ClearRange to a common Range object.\n * PageRange and ClearRange have start and end while Range offset and count\n * this function normalizes to Range.\n * @param response - Model PageBlob Range response\n */\nexport function rangeResponseFromModel(response) {\n  const pageRange = (response._response.parsedBody.pageRange || []).map(x => ({\n    offset: x.start,\n    count: x.end - x.start\n  }));\n  const clearRange = (response._response.parsedBody.clearRange || []).map(x => ({\n    offset: x.start,\n    count: x.end - x.start\n  }));\n  return Object.assign(Object.assign({}, response), {\n    pageRange,\n    clearRange,\n    _response: Object.assign(Object.assign({}, response._response), {\n      parsedBody: {\n        pageRange,\n        clearRange\n      }\n    })\n  });\n}","map":{"version":3,"sources":["../../../src/PageBlobRangeResponse.ts"],"names":[],"mappings":"AAAA;AACA;;AA8EA;;;;;AAKG;AACH,OAAM,SAAU,sBAAV,CACJ,QADI,EACiF;AAErF,QAAM,SAAS,GAAG,CAAC,QAAQ,CAAC,SAAT,CAAmB,UAAnB,CAA8B,SAA9B,IAA2C,EAA5C,EAAgD,GAAhD,CAAqD,CAAD,KAAQ;AAC5E,IAAA,MAAM,EAAE,CAAC,CAAC,KADkE;AAE5E,IAAA,KAAK,EAAE,CAAC,CAAC,GAAF,GAAQ,CAAC,CAAC;AAF2D,GAAR,CAApD,CAAlB;AAKA,QAAM,UAAU,GAAG,CAAC,QAAQ,CAAC,SAAT,CAAmB,UAAnB,CAA8B,UAA9B,IAA4C,EAA7C,EAAiD,GAAjD,CAAsD,CAAD,KAAQ;AAC9E,IAAA,MAAM,EAAE,CAAC,CAAC,KADoE;AAE9E,IAAA,KAAK,EAAE,CAAC,CAAC,GAAF,GAAQ,CAAC,CAAC;AAF6D,GAAR,CAArD,CAAnB;AAKA,SAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,QADL,CAAA,EACa;AACX,IAAA,SADW;AAEX,IAAA,UAFW;AAGX,IAAA,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACJ,QAAQ,CAAC,SADL,CAAA,EACc;AACrB,MAAA,UAAU,EAAE;AACV,QAAA,SADU;AAEV,QAAA;AAFU;AADS,KADd;AAHE,GADb,CAAA;AAYD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpResponse } from \"@azure/core-http\";\nimport {\n  PageBlobGetPageRangesHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesResponseModel,\n  PageBlobGetPageRangesDiffResponseModel,\n} from \"./generatedModels\";\nimport { Range } from \"./Range\";\n\n/**\n * List of page ranges for a blob.\n */\nexport interface PageList {\n  /**\n   * Valid non-overlapping page ranges.\n   */\n  pageRange?: Range[];\n  /**\n   * Present if the prevSnapshot parameter was specified and there were cleared\n   * pages between the previous snapshot and the target snapshot.\n   */\n  clearRange?: Range[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesResponse extends PageList, PageBlobGetPageRangesHeaders {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: PageBlobGetPageRangesHeaders;\n\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: PageList;\n  };\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffResponse\n  extends PageList,\n    PageBlobGetPageRangesDiffHeaders {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: PageBlobGetPageRangesDiffHeaders;\n\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: PageList;\n  };\n}\n\n/**\n * Function that converts PageRange and ClearRange to a common Range object.\n * PageRange and ClearRange have start and end while Range offset and count\n * this function normalizes to Range.\n * @param response - Model PageBlob Range response\n */\nexport function rangeResponseFromModel(\n  response: PageBlobGetPageRangesResponseModel | PageBlobGetPageRangesDiffResponseModel\n): PageBlobGetPageRangesResponse | PageBlobGetPageRangesDiffResponse {\n  const pageRange = (response._response.parsedBody.pageRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  const clearRange = (response._response.parsedBody.clearRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  return {\n    ...response,\n    pageRange,\n    clearRange,\n    _response: {\n      ...response._response,\n      parsedBody: {\n        pageRange,\n        clearRange,\n      },\n    },\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}