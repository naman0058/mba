{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy, HttpHeaders, isNode } from \"@azure/core-http\";\nimport { HeaderConstants } from \"../utils/constants\";\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n */\n\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param telemetry -\n   */\n  constructor(nextPolicy, options, telemetry) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n\n\n  async sendRequest(request) {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n\n}","map":{"version":3,"sources":["../../../../src/policies/TelemetryPolicy.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SACE,iBADF,EAEE,WAFF,EAIE,MAJF,QAQO,kBARP;AAUA,SAAS,eAAT,QAAgC,oBAAhC;AAEA;;AAEG;;AACH,OAAM,MAAO,eAAP,SAA+B,iBAA/B,CAAgD;AAMpD;;;;;AAKG;AACH,EAAA,WAAA,CAAY,UAAZ,EAAuC,OAAvC,EAAsE,SAAtE,EAAuF;AACrF,UAAM,UAAN,EAAkB,OAAlB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACD;AAED;;;;AAIG;;;AACqB,QAAX,WAAW,CAAC,OAAD,EAAqB;AAC3C,QAAI,MAAJ,EAAY;AACV,UAAI,CAAC,OAAO,CAAC,OAAb,EAAsB;AACpB,QAAA,OAAO,CAAC,OAAR,GAAkB,IAAI,WAAJ,EAAlB;AACD;;AACD,UAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,eAAe,CAAC,UAApC,CAAL,EAAsD;AACpD,QAAA,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,eAAe,CAAC,UAApC,EAAgD,KAAK,SAArD;AACD;AACF;;AAED,WAAO,KAAK,WAAL,CAAiB,WAAjB,CAA6B,OAA7B,CAAP;AACD;;AAjCmD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  HttpHeaders,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource,\n} from \"@azure/core-http\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Telemetry string.\n   */\n  public readonly telemetry: string;\n\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param telemetry -\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, telemetry: string) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}