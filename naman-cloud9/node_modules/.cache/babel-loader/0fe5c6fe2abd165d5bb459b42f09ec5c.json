{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { blobToString } from \"./utils/utils.browser\";\nexport async function getBodyAsText(batchResponse) {\n  const blob = await batchResponse.blobBody;\n  return blobToString(blob);\n}\nexport function utf8ByteLength(str) {\n  return new Blob([str]).size;\n}","map":{"version":3,"sources":["../../../src/BatchUtils.browser.ts"],"names":[],"mappings":"AAAA;AACA;AAGA,SAAS,YAAT,QAA6B,uBAA7B;AAEA,OAAO,eAAe,aAAf,CACL,aADK,EACyC;AAE9C,QAAM,IAAI,GAAI,MAAM,aAAa,CAAC,QAAlC;AACA,SAAO,YAAY,CAAC,IAAD,CAAnB;AACD;AAED,OAAM,SAAU,cAAV,CAAyB,GAAzB,EAAoC;AACxC,SAAO,IAAI,IAAJ,CAAS,CAAC,GAAD,CAAT,EAAgB,IAAvB;AACD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport { blobToString } from \"./utils/utils.browser\";\n\nexport async function getBodyAsText(\n  batchResponse: ServiceSubmitBatchResponseModel\n): Promise<string> {\n  const blob = (await batchResponse.blobBody) as Blob;\n  return blobToString(blob);\n}\n\nexport function utf8ByteLength(str: string): number {\n  return new Blob([str]).size;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}