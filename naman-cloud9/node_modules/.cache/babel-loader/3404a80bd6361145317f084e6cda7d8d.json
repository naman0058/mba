{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\n/**\n * Creates a policy that assigns a unique request id to outgoing requests.\n * @param requestIdHeaderName - The name of the header to use when assigning the unique id to the request.\n */\n\nexport function generateClientRequestIdPolicy() {\n  let requestIdHeaderName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"x-ms-client-request-id\";\n  return {\n    create: (nextPolicy, options) => {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    }\n  };\n}\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy, options, _requestIdHeaderName) {\n    super(nextPolicy, options);\n    this._requestIdHeaderName = _requestIdHeaderName;\n  }\n\n  sendRequest(request) {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, request.requestId);\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n\n}","map":{"version":3,"sources":["../../../src/policies/generateClientRequestIdPolicy.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SACE,iBADF,QAKO,iBALP;AASA;;;AAGG;;AACH,OAAM,SAAU,6BAAV,GAC0C;AAAA,MAA9C,mBAA8C,uEAAxB,wBAAwB;AAE9C,SAAO;AACL,IAAA,MAAM,EAAE,CAAC,UAAD,EAA4B,OAA5B,KAA6D;AACnE,aAAO,IAAI,6BAAJ,CAAkC,UAAlC,EAA8C,OAA9C,EAAuD,mBAAvD,CAAP;AACD;AAHI,GAAP;AAKD;AAED,OAAM,MAAO,6BAAP,SAA6C,iBAA7C,CAA8D;AAClE,EAAA,WAAA,CACE,UADF,EAEE,OAFF,EAGU,oBAHV,EAGsC;AAEpC,UAAM,UAAN,EAAkB,OAAlB;AAFQ,SAAA,oBAAA,GAAA,oBAAA;AAGT;;AAEM,EAAA,WAAW,CAAC,OAAD,EAAyB;AACzC,QAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,KAAK,oBAA9B,CAAL,EAA0D;AACxD,MAAA,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,KAAK,oBAAzB,EAA+C,OAAO,CAAC,SAAvD;AACD;;AACD,WAAO,KAAK,WAAL,CAAiB,WAAjB,CAA6B,OAA7B,CAAP;AACD;;AAdiE","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Creates a policy that assigns a unique request id to outgoing requests.\n * @param requestIdHeaderName - The name of the header to use when assigning the unique id to the request.\n */\nexport function generateClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\"\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    },\n  };\n}\n\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private _requestIdHeaderName: string\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, request.requestId);\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}