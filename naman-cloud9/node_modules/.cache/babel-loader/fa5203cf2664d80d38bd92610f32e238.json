{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createSpanFunction } from \"@azure/core-tracing\";\n/**\n * Creates a span using the global tracer.\n * @internal\n */\n\nexport const createSpan = createSpanFunction({\n  packagePrefix: \"Azure.Storage.Blob\",\n  namespace: \"Microsoft.Storage\"\n});\n/**\n * @internal\n *\n * Adapt the tracing options from OperationOptions to what they need to be for\n * RequestOptionsBase (when we update to later OpenTelemetry versions this is now\n * two separate fields, not just one).\n */\n\nexport function convertTracingToRequestOptionsBase(options) {\n  var _a, _b;\n\n  return {\n    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n    spanOptions: (_a = options === null || options === void 0 ? void 0 : options.tracingOptions) === null || _a === void 0 ? void 0 : _a.spanOptions,\n    tracingContext: (_b = options === null || options === void 0 ? void 0 : options.tracingOptions) === null || _b === void 0 ? void 0 : _b.tracingContext\n  };\n}","map":{"version":3,"sources":["../../../../src/utils/tracing.ts"],"names":[],"mappings":"AAAA;AACA;AAGA,SAAS,kBAAT,QAAmC,qBAAnC;AAEA;;;AAGG;;AACH,OAAO,MAAM,UAAU,GAAG,kBAAkB,CAAC;AAC3C,EAAA,aAAa,EAAE,oBAD4B;AAE3C,EAAA,SAAS,EAAE;AAFgC,CAAD,CAArC;AAKP;;;;;;AAMG;;AACH,OAAM,SAAU,kCAAV,CACJ,OADI,EACsB;;;AAE1B,SAAO;AACL;AACA,IAAA,WAAW,EAAE,CAAA,EAAA,GAAC,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,cAAV,MAAgC,IAAhC,IAAgC,EAAA,KAAA,KAAA,CAAhC,GAAgC,KAAA,CAAhC,GAAgC,EAAA,CAAE,WAF1C;AAGL,IAAA,cAAc,EAAE,CAAA,EAAA,GAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,cAAT,MAAuB,IAAvB,IAAuB,EAAA,KAAA,KAAA,CAAvB,GAAuB,KAAA,CAAvB,GAAuB,EAAA,CAAE;AAHpC,GAAP;AAKD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, RequestOptionsBase } from \"@azure/core-http\";\nimport { createSpanFunction } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const createSpan = createSpanFunction({\n  packagePrefix: \"Azure.Storage.Blob\",\n  namespace: \"Microsoft.Storage\",\n});\n\n/**\n * @internal\n *\n * Adapt the tracing options from OperationOptions to what they need to be for\n * RequestOptionsBase (when we update to later OpenTelemetry versions this is now\n * two separate fields, not just one).\n */\nexport function convertTracingToRequestOptionsBase(\n  options?: OperationOptions\n): Pick<RequestOptionsBase, \"spanOptions\" | \"tracingContext\"> {\n  return {\n    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n    spanOptions: (options?.tracingOptions as any)?.spanOptions,\n    tracingContext: options?.tracingOptions?.tracingContext,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}