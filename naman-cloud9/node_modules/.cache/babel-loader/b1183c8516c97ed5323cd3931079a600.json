{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input) {\n  return typeof input === \"object\" && input !== null && !Array.isArray(input) && !(input instanceof RegExp) && !(input instanceof Date);\n}","map":{"version":3,"sources":["../../src/object.ts"],"names":[],"mappings":"AAAA;AACA;;AAOA;;;AAGG;AACH,OAAM,SAAU,QAAV,CAAmB,KAAnB,EAAiC;AACrC,SACE,OAAO,KAAP,KAAiB,QAAjB,IACA,KAAK,KAAK,IADV,IAEA,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,CAFD,IAGA,EAAE,KAAK,YAAY,MAAnB,CAHA,IAIA,EAAE,KAAK,YAAY,IAAnB,CALF;AAOD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = { [s: string]: unknown };\n\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    !Array.isArray(input) &&\n    !(input instanceof RegExp) &&\n    !(input instanceof Date)\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}