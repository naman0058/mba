{"ast":null,"code":"var _jsxFileName = \"D:\\\\naman-cloud9\\\\naman-cloud9\\\\src\\\\pages\\\\FormattedDocument.js\";\nimport React from 'react';\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\nimport Documentation from \"../components/Documentation\";\nexport default class API extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data1: [],\n      refreshing: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:4000/get-aws-files', {\n      method: 'GET',\n      // mode: 'no-cors',\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json()).catch(error => console.error('Error', error)).then(result => {\n      console.log('result', result);\n\n      if (result) {\n        this.setState({\n          refreshing: false,\n          data1: result //setstate of data which is convert in to fetch data and pass them in to component see below\n\n        }); // alert(result[0].timeleft)\n      } else {\n        this.setState({\n          refreshing: false,\n          data1: ['result'] //setstate of data which is convert in to fetch data and pass them in to component see below\n\n        });\n      }\n    });\n  }\n\n  encode(data) {\n    let buf = Buffer.from(data);\n    let base64 = buf.toString(\"base64\");\n    return base64;\n  }\n\n  render() {\n    let list = this.state.data1;\n\n    if (list[0] == undefined) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"article\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, \"Upload Formatted Documents\"), /*#__PURE__*/React.createElement(\"form\", {\n        action: \"http://localhost:4000/insert/image\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 1\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        style: {\n          marginTop: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 1\n        }\n      }, \"Submit\"))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, \"Loading...\"));\n    } else if (list[0].id == undefined) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"article\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, \"Upload Formatted Documents\"), /*#__PURE__*/React.createElement(\"form\", {\n        action: \"http://localhost:4000/insert/image\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 1\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        style: {\n          marginTop: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 1\n        }\n      }, \"Submit\"))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, \"No Data Found\"));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"article\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, \"Upload Formatted Documents\"), /*#__PURE__*/React.createElement(\"form\", {\n        action: \"http://localhost:4000/insert/image\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 1\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        style: {\n          marginTop: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 1\n        }\n      }, \"Submit\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 1\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, list.map(item => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        border: \"light\",\n        className: \"shadow-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: \"data:image/jpeg;base64,\" + this.encode(item.Body),\n        style: {\n          width: 180,\n          textAlign: 'center',\n          height: 180,\n          objectFit: 'contain'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      })))) //   <tr>\n      //   <th className=\"border-0\" style={{ width: '5%' }}><Image src={\"http://localhost:4000/images/\" + item.image } style={{width:100}}/></th>\n      // </tr>\n      ))));\n    }\n  }\n\n}\n;","map":{"version":3,"sources":["D:/naman-cloud9/naman-cloud9/src/pages/FormattedDocument.js"],"names":["React","moment","Datetime","FontAwesomeIcon","faSearch","faCalendarAlt","Col","Row","Nav","Card","Image","Button","Table","Dropdown","ProgressBar","Pagination","ButtonGroup","Documentation","API","Component","state","data1","refreshing","componentDidMount","fetch","method","headers","then","response","json","catch","error","console","result","log","setState","encode","data","buf","Buffer","from","base64","toString","render","list","undefined","marginTop","id","map","item","Body","width","textAlign","height","objectFit"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\n\r\nimport Documentation from \"../components/Documentation\";\r\n\r\nexport default class API extends React.Component {\r\n\r\n\r\n\r\n\r\n\r\n  state = {\r\n    data1 : [],\r\n    refreshing:false\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\nfetch('http://localhost:4000/get-aws-files', {\r\n    method: 'GET',\r\n    // mode: 'no-cors',\r\nheaders: {\r\n'Access-Control-Allow-Origin':'*'\r\n}\r\n  })\r\n  .then((response) => response.json())\r\n    .catch((error) => console.error('Error', error))\r\n    .then((result) => {\r\n  console.log('result',result)\r\n      if (result) {\r\n        this.setState({\r\n          refreshing: false,\r\n          data1: result, //setstate of data which is convert in to fetch data and pass them in to component see below\r\n        });\r\n\r\n     \r\n        // alert(result[0].timeleft)\r\n\r\n\r\n      } else {\r\n        this.setState({\r\n          refreshing: false,\r\n          data1: ['result'], //setstate of data which is convert in to fetch data and pass them in to component see below\r\n        });\r\n      }\r\n    });\r\n\r\n}\r\n\r\n\r\n encode(data) {\r\n  let buf = Buffer.from(data);\r\n  let base64 = buf.toString(\"base64\");\r\n  return base64;\r\n}\r\n\r\nrender(){\r\n\r\n\r\n\r\n  let list = this.state.data1\r\n\r\n  if (list[0] == undefined) {\r\n\r\n    return(\r\n      <>\r\n      <article>\r\n      <p>Upload Formatted Documents</p>\r\n      \r\n      <form action='http://localhost:4000/insert/image' method='post' encType='multipart/form-data'>\r\n<input type='file' name='image' className='form-control'></input>\r\n   \r\n\r\n<button type='submit' className='btn btn-primary' style={{marginTop:40}}>Submit</button>\r\n</form>\r\n        \r\n\r\n    </article>\r\n      <p>Loading...</p>\r\n      </>\r\n    )\r\n\r\n  } \r\n  \r\n  else if (list[0].id == undefined) {\r\n    \r\n    \r\n    return(\r\n      <>\r\n      <article>\r\n      <p>Upload Formatted Documents</p>\r\n      \r\n      <form action='http://localhost:4000/insert/image' method='post' encType='multipart/form-data'>\r\n<input type='file' name='image' className='form-control'></input>\r\n   \r\n\r\n<button type='submit' className='btn btn-primary' style={{marginTop:40}}>Submit</button>\r\n</form>\r\n        \r\n\r\n    </article>\r\n      <p>No Data Found</p>\r\n      </>\r\n    )\r\n\r\n  } else {\r\n\r\n\r\n  return (\r\n    <>\r\n    <article>\r\n      <p>Upload Formatted Documents</p>\r\n      \r\n      <form action='http://localhost:4000/insert/image' method='post' encType='multipart/form-data'>\r\n<input type='file' name='image' className='form-control'></input>\r\n   \r\n\r\n<button type='submit' className='btn btn-primary' style={{marginTop:40}}>Submit</button>\r\n</form>\r\n        \r\n\r\n    </article>\r\n\r\n\r\n<br/><br/>\r\n\r\n \r\n        <div className='container'>\r\n          <div className='row'>\r\n            \r\n        \r\n       \r\n\r\n{\r\n  list.map(item=>(\r\n\r\n    <div className='col-lg-2'>\r\n         <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Body className=\"p-0\">\r\n\r\n      <Image src={\"data:image/jpeg;base64,\" + this.encode(item.Body) } style={{width:180,textAlign:'center',height:180,objectFit:'contain'}}/>\r\n\r\n      {/* <img src='data:image/jpeg;base64,\" + encode(img.Body) + \"'\" + \"/> */}\r\n\r\n\r\n</Card.Body>\r\n    </Card>\r\n\r\n    </div>\r\n  //   <tr>\r\n  //   <th className=\"border-0\" style={{ width: '5%' }}><Image src={\"http://localhost:4000/images/\" + item.image } style={{width:100}}/></th>\r\n \r\n  // </tr>\r\n  ))\r\n}\r\n\r\n         \r\n</div>\r\n        </div>\r\n          {/* </tbody>\r\n        </Table> */}\r\n   \r\n\r\n    </>\r\n  );\r\n  }\r\n}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}