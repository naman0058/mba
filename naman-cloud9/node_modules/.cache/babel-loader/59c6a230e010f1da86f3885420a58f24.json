{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { Service, Container, Blob, PageBlob, AppendBlob, BlockBlob } from \"./operations\";\nimport { StorageClientContext } from \"./storageClientContext\";\nexport class StorageClient extends StorageClientContext {\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url, options) {\n    super(url, options);\n    this.service = new Service(this);\n    this.container = new Container(this);\n    this.blob = new Blob(this);\n    this.pageBlob = new PageBlob(this);\n    this.appendBlob = new AppendBlob(this);\n    this.blockBlob = new BlockBlob(this);\n  }\n\n}","map":{"version":3,"sources":["../../../../../src/generated/src/storageClient.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;AAEH,SACE,OADF,EAEE,SAFF,EAGE,IAHF,EAIE,QAJF,EAKE,UALF,EAME,SANF,QAOO,cAPP;AAQA,SAAS,oBAAT,QAAqC,wBAArC;AAGA,OAAM,MAAO,aAAP,SAA6B,oBAA7B,CAAiD;AACrD;;;;;AAKG;AACH,EAAA,WAAA,CAAY,GAAZ,EAAyB,OAAzB,EAA8D;AAC5D,UAAM,GAAN,EAAW,OAAX;AACA,SAAK,OAAL,GAAe,IAAI,OAAJ,CAAY,IAAZ,CAAf;AACA,SAAK,SAAL,GAAiB,IAAI,SAAJ,CAAc,IAAd,CAAjB;AACA,SAAK,IAAL,GAAY,IAAI,IAAJ,CAAS,IAAT,CAAZ;AACA,SAAK,QAAL,GAAgB,IAAI,QAAJ,CAAa,IAAb,CAAhB;AACA,SAAK,UAAL,GAAkB,IAAI,UAAJ,CAAe,IAAf,CAAlB;AACA,SAAK,SAAL,GAAiB,IAAI,SAAJ,CAAc,IAAd,CAAjB;AACD;;AAfoD","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  Service,\n  Container,\n  Blob,\n  PageBlob,\n  AppendBlob,\n  BlockBlob\n} from \"./operations\";\nimport { StorageClientContext } from \"./storageClientContext\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nexport class StorageClient extends StorageClientContext {\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    super(url, options);\n    this.service = new Service(this);\n    this.container = new Container(this);\n    this.blob = new Blob(this);\n    this.pageBlob = new PageBlob(this);\n    this.appendBlob = new AppendBlob(this);\n    this.blockBlob = new BlockBlob(this);\n  }\n\n  service: Service;\n  container: Container;\n  blob: Blob;\n  pageBlob: PageBlob;\n  appendBlob: AppendBlob;\n  blockBlob: BlockBlob;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}