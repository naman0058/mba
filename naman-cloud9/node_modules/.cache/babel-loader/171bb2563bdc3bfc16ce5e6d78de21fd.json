{"ast":null,"code":"var _jsxFileName = \"D:\\\\naman-cloud9\\\\naman-cloud9\\\\src\\\\pages\\\\ContainerImages.jsx\";\nimport React from 'react';\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\nimport { BlobServiceClient } from \"@azure/storage-blob\";\nconst containerName = `uploaded`;\nconst sasToken = process.env.REACT_APP_AZURE_STORAGE_SAS_TOKEN;\nconst storageAccountName = process.env.REACT_APP_AZURE_STORAGE_RESOURCE_NAME;\n\nasync function deleteBlobIfItExists() {\n  alert('hi');\n  console.log(blobName);\n  const blobService = new BlobServiceClient(blobName);\n  const containerClient = blobService.getContainerClient(containerName); // include: Delete the base blob and all of its snapshots.\n  // only: Delete only the blob's snapshots and not the blob itself.\n\n  const options = {\n    deleteSnapshots: 'include' // or 'only'\n\n  }; // Create blob client from container client\n\n  const blockBlobClient = await containerClient.getBlockBlobClient(blobName);\n  await blockBlobClient.deleteIfExists(options);\n  console.log(`deleted blob ${blobName}`);\n}\n\nconst DisplayImagesFromContainer = _ref => {\n  let {\n    blobList\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // delete(txt){\n    //   fetch(`http://localhost:4000/myaws/delete?id=${txt}`, {\n    //     method: 'GET',\n    //     // mode: 'no-cors',\n    // headers: {\n    // 'Access-Control-Allow-Origin':'*'\n    // }\n    //   })\n    //   .then((response) => response.json())\n    //     .catch((error) => console.error('Error', error))\n    //     .then((result) => {\n    //   console.log('result',result)\n    //       if (result.msg == 'success') {\n    //    this.componentDidMount()\n    //       }\n    //       else{\n    //     alert('An error occured..Plese try again later')\n    //       }\n    //     })\n    // }\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"light\",\n      className: \"shadow-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      className: \"table-centered rounded\",\n      style: {\n        whiteSpace: 'pre-wrap',\n        wordWrap: 'break-word'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        width: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Documents\"), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        width: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        width: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, blobList.map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, item.name), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: item.url,\n        download: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      }, \"Download\")), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-light\",\n        onClick: deleteBlobIfItExists(item.url),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, \"Delete\")));\n    }))))))\n  );\n};\n\nexport default DisplayImagesFromContainer;","map":{"version":3,"sources":["D:/naman-cloud9/naman-cloud9/src/pages/ContainerImages.jsx"],"names":["React","Col","Row","Nav","Card","Image","Button","Table","Dropdown","ProgressBar","Pagination","ButtonGroup","BlobServiceClient","containerName","sasToken","process","env","REACT_APP_AZURE_STORAGE_SAS_TOKEN","storageAccountName","REACT_APP_AZURE_STORAGE_RESOURCE_NAME","deleteBlobIfItExists","alert","console","log","blobName","blobService","containerClient","getContainerClient","options","deleteSnapshots","blockBlobClient","getBlockBlobClient","deleteIfExists","DisplayImagesFromContainer","blobList","whiteSpace","wordWrap","width","map","item","name","url"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { Col, Row, Nav, Card, Image, Button, Table, Dropdown, ProgressBar, Pagination, ButtonGroup } from '@themesberg/react-bootstrap';\r\n\r\nimport { BlobServiceClient } from \"@azure/storage-blob\";\r\n\r\nconst containerName = `uploaded`;\r\nconst sasToken = process.env.REACT_APP_AZURE_STORAGE_SAS_TOKEN;\r\nconst storageAccountName = process.env.REACT_APP_AZURE_STORAGE_RESOURCE_NAME;\r\n\r\n\r\n\r\nasync function deleteBlobIfItExists(){\r\n  alert('hi')\r\n\r\nconsole.log(blobName)\r\n\r\nconst blobService = new BlobServiceClient(blobName);\r\n\r\n  const containerClient =\r\n  blobService.getContainerClient(containerName);\r\n\r\n  // include: Delete the base blob and all of its snapshots.\r\n  // only: Delete only the blob's snapshots and not the blob itself.\r\n  const options = {\r\n    deleteSnapshots: 'include' // or 'only'\r\n  }\r\n\r\n  // Create blob client from container client\r\n  const blockBlobClient = await containerClient.getBlockBlobClient(blobName);\r\n\r\n  await blockBlobClient.deleteIfExists(options);\r\n\r\n  console.log(`deleted blob ${blobName}`);\r\n\r\n}\r\n\r\nconst DisplayImagesFromContainer = ({blobList}) => (\r\n\r\n\r\n  // delete(txt){\r\n  //   fetch(`http://localhost:4000/myaws/delete?id=${txt}`, {\r\n  //     method: 'GET',\r\n  //     // mode: 'no-cors',\r\n  // headers: {\r\n  // 'Access-Control-Allow-Origin':'*'\r\n  // }\r\n  //   })\r\n  //   .then((response) => response.json())\r\n  //     .catch((error) => console.error('Error', error))\r\n  //     .then((result) => {\r\n  //   console.log('result',result)\r\n  //       if (result.msg == 'success') {\r\n  //    this.componentDidMount()\r\n  //       }\r\n  //       else{\r\n  //     alert('An error occured..Plese try again later')\r\n  //       }\r\n  //     })\r\n        \r\n  // }\r\n\r\n    <div>\r\n      <Card border=\"light\" className=\"shadow-sm\">\r\n      <Card.Body className=\"p-0\">\r\n      <Table responsive className=\"table-centered rounded\" style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}>\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n            <th style={{ width: '5%' }}>Documents</th>\r\n             \r\n              <th  style={{ width: '5%' }}>Action</th>\r\n              <th  style={{ width: '5%' }}>Delete</th>\r\n\r\n             \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n        {blobList.map((item) => {\r\n          return (\r\n\r\n            <tr>\r\n              <th>{item.name}</th>\r\n              <th><a href={item.url} download>Download</a></th>\r\n              <th><button className='btn btn-light' onClick={deleteBlobIfItExists(item.url)}>Delete</button></th>\r\n\r\n\r\n         \r\n          </tr>\r\n          \r\n          );\r\n        })}\r\n         </tbody>\r\n        </Table>\r\n      </Card.Body>\r\n    </Card>\r\n    </div>\r\n  );\r\n\r\n  export default DisplayImagesFromContainer;"]},"metadata":{},"sourceType":"module"}