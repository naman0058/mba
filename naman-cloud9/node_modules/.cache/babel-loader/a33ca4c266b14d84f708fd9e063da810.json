{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttp from \"@azure/core-http\";\nconst packageName = \"azure-storage-blob\";\nconst packageVersion = \"12.13.0\";\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url, options) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    } // Initializing default values for options\n\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.baseUri = options.endpoint || \"{url}\"; // Parameter assignments\n\n    this.url = url; // Assigning values to Constant parameters\n\n    this.version = options.version || \"2021-12-02\";\n  }\n\n}","map":{"version":3,"sources":["../../../../../src/generated/src/storageClientContext.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;AAEH,OAAO,KAAK,QAAZ,MAA0B,kBAA1B;AAGA,MAAM,WAAW,GAAG,oBAApB;AACA,MAAM,cAAc,GAAG,SAAvB;AAEA,OAAM,MAAO,oBAAP,SAAoC,QAAQ,CAAC,aAA7C,CAA0D;AAI9D;;;;;AAKG;AACH,EAAA,WAAA,CAAY,GAAZ,EAAyB,OAAzB,EAA8D;AAC5D,QAAI,GAAG,KAAK,SAAZ,EAAuB;AACrB,YAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACD,KAH2D,CAK5D;;;AACA,QAAI,CAAC,OAAL,EAAc;AACZ,MAAA,OAAO,GAAG,EAAV;AACD;;AAED,QAAI,CAAC,OAAO,CAAC,SAAb,EAAwB;AACtB,YAAM,gBAAgB,GAAG,QAAQ,CAAC,wBAAT,EAAzB;AACA,MAAA,OAAO,CAAC,SAAR,GAAoB,GAAG,WAAW,IAAI,cAAc,IAAI,gBAAgB,EAAxE;AACD;;AAED,UAAM,SAAN,EAAiB,OAAjB;AAEA,SAAK,kBAAL,GAA0B,iCAA1B;AAEA,SAAK,OAAL,GAAe,OAAO,CAAC,QAAR,IAAoB,OAAnC,CAnB4D,CAqB5D;;AACA,SAAK,GAAL,GAAW,GAAX,CAtB4D,CAwB5D;;AACA,SAAK,OAAL,GAAe,OAAO,CAAC,OAAR,IAAmB,YAAlC;AACD;;AApC6D","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-storage-blob\";\nconst packageVersion = \"12.13.0\";\n\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{url}\";\n\n    // Parameter assignments\n    this.url = url;\n\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2021-12-02\";\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}