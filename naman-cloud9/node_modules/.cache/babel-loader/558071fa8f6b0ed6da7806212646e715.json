{"ast":null,"code":"var _jsxFileName = \"D:\\\\naman-cloud9\\\\naman-cloud9\\\\src\\\\pages\\\\MyDrive.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faCog, faHome, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Form, Button, ButtonGroup, Breadcrumb, InputGroup, Dropdown } from '@themesberg/react-bootstrap';\nimport { faCashRegister, faChartLine, faCloudUploadAlt, faPlus, faRocket, faTasks, faUserShield } from '@fortawesome/free-solid-svg-icons';\nimport { TransactionsTable } from \"../components/Tables\";\nexport default class API extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data1: [],\n      refreshing: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://172.20.10.3:4000/mydrive', {\n      method: 'GET'\n    }).then(res => console.log('aaa', res)).catch(error => console.error('Error', error)).then(result => {\n      //   console.log('result',res)\n      if (result) {\n        this.setState({\n          refreshing: false,\n          data1: result //setstate of data which is convert in to fetch data and pass them in to component see below\n\n        }); // alert(result[0].timeleft)\n      } else {\n        this.setState({\n          refreshing: false,\n          data1: ['result'] //setstate of data which is convert in to fetch data and pass them in to component see below\n\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TransactionsTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["D:/naman-cloud9/naman-cloud9/src/pages/MyDrive.js"],"names":["React","FontAwesomeIcon","faCheck","faCog","faHome","faSearch","Col","Row","Form","Button","ButtonGroup","Breadcrumb","InputGroup","Dropdown","faCashRegister","faChartLine","faCloudUploadAlt","faPlus","faRocket","faTasks","faUserShield","TransactionsTable","API","Component","state","data1","refreshing","componentDidMount","fetch","method","then","res","console","log","catch","error","result","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,QAAjC,QAAiD,mCAAjD;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,WAAjC,EAA8CC,UAA9C,EAA0DC,UAA1D,EAAsEC,QAAtE,QAAsF,6BAAtF;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,gBAAtC,EAAwDC,MAAxD,EAAgEC,QAAhE,EAA0EC,OAA1E,EAAmFC,YAAnF,QAAuG,mCAAvG;AAEA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,eAAe,MAAMC,GAAN,SAAkBtB,KAAK,CAACuB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE7CC,KAF6C,GAErC;AACJC,MAAAA,KAAK,EAAG,EADJ;AAEJC,MAAAA,UAAU,EAAC;AAFP,KAFqC;AAAA;;AAQjDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,MAAAA,MAAM,EAAE;AAD6B,KAApC,CAAL,CAIKC,IAJL,CAIWC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,GAAlB,CAJnB,EAKKG,KALL,CAKYC,KAAD,IAAWH,OAAO,CAACG,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CALtB,EAMKL,IANL,CAMWM,MAAD,IAAY;AACtB;AACM,UAAIA,MAAJ,EAAY;AACV,aAAKC,QAAL,CAAc;AACZX,UAAAA,UAAU,EAAE,KADA;AAEZD,UAAAA,KAAK,EAAEW,MAFK,CAEG;;AAFH,SAAd,EADU,CAOV;AAGD,OAVD,MAUO;AACL,aAAKC,QAAL,CAAc;AACZX,UAAAA,UAAU,EAAE,KADA;AAEZD,UAAAA,KAAK,EAAE,CAAC,QAAD,CAFK,CAEO;;AAFP,SAAd;AAID;AACF,KAxBL;AA0BH;;AAEGa,EAAAA,MAAM,GAAE;AAKJ,wBACI,uDAIE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADJ;AAQH;;AAlD4C;AAoDhD","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faCog, faHome, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Form, Button, ButtonGroup, Breadcrumb, InputGroup, Dropdown } from '@themesberg/react-bootstrap';\r\nimport { faCashRegister, faChartLine, faCloudUploadAlt, faPlus, faRocket, faTasks, faUserShield } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { TransactionsTable } from \"../components/Tables\";\r\n\r\nexport default class API extends React.Component {\r\n\r\n    state = {\r\n        data1 : [],\r\n        refreshing:false\r\n    }\r\n\r\n\r\ncomponentDidMount(){\r\n    fetch('http://172.20.10.3:4000/mydrive', {\r\n        method: 'GET',\r\n        \r\n      })\r\n        .then((res) => console.log('aaa',res))\r\n        .catch((error) => console.error('Error', error))\r\n        .then((result) => {\r\n    //   console.log('result',res)\r\n          if (result) {\r\n            this.setState({\r\n              refreshing: false,\r\n              data1: result, //setstate of data which is convert in to fetch data and pass them in to component see below\r\n            });\r\n\r\n         \r\n            // alert(result[0].timeleft)\r\n\r\n\r\n          } else {\r\n            this.setState({\r\n              refreshing: false,\r\n              data1: ['result'], //setstate of data which is convert in to fetch data and pass them in to component see below\r\n            });\r\n          }\r\n        });\r\n\r\n}\r\n\r\n    render(){\r\n\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n       \r\n        \r\n        \r\n              <TransactionsTable />\r\n            </>\r\n          );\r\n    }\r\n \r\n};\r\n"]},"metadata":{},"sourceType":"module"}