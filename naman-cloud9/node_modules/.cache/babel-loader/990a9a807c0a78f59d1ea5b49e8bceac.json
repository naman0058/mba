{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nexport function getDefaultProxySettings(_proxyUrl) {\n  return undefined;\n}\nexport function proxyPolicy(_proxySettings) {\n  return {\n    create: (_nextPolicy, _options) => {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy, options) {\n    super(nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n  }\n\n  sendRequest(_request) {\n    throw proxyNotSupportedInBrowser;\n  }\n\n}","map":{"version":3,"sources":["../../../src/policies/proxyPolicy.browser.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SACE,iBADF,QAKO,iBALP;AAUA,MAAM,0BAA0B,GAAG,IAAI,KAAJ,CAAU,qDAAV,CAAnC;AAEA,OAAM,SAAU,uBAAV,CAAkC,SAAlC,EAAoD;AACxD,SAAO,SAAP;AACD;AAED,OAAM,SAAU,WAAV,CAAsB,cAAtB,EAAoD;AACxD,SAAO;AACL,IAAA,MAAM,EAAE,CAAC,WAAD,EAA6B,QAA7B,KAA+D;AACrE,YAAM,0BAAN;AACD;AAHI,GAAP;AAKD;AAED,OAAM,MAAO,WAAP,SAA2B,iBAA3B,CAA4C;AAChD,EAAA,WAAA,CAAY,UAAZ,EAAuC,OAAvC,EAAoE;AAClE,UAAM,UAAN,EAAkB,OAAlB;AACA,UAAM,0BAAN;AACD;;AAEM,EAAA,WAAW,CAAC,QAAD,EAA0B;AAC1C,UAAM,0BAAN;AACD;;AAR+C","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { ProxySettings } from \"../serviceClient\";\nimport { WebResourceLike } from \"../webResource\";\n\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\n\nexport function getDefaultProxySettings(_proxyUrl?: string): ProxySettings | undefined {\n  return undefined;\n}\n\nexport function proxyPolicy(_proxySettings?: ProxySettings): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw proxyNotSupportedInBrowser;\n    },\n  };\n}\n\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n  }\n\n  public sendRequest(_request: WebResourceLike): Promise<HttpOperationResponse> {\n    throw proxyNotSupportedInBrowser;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}