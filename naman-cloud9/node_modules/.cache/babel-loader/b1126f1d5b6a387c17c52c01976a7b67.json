{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n */\n\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  create(nextPolicy, options) {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n\n}","map":{"version":3,"sources":["../../../../src/credentials/AnonymousCredential.ts"],"names":[],"mappings":"AAAA;AACA;AAIA,SAAS,yBAAT,QAA0C,uCAA1C;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA;;;;;AAKG;;AACH,OAAM,MAAO,mBAAP,SAAmC,UAAnC,CAA6C;AACjD;;;;;AAKG;AACI,EAAA,MAAM,CACX,UADW,EAEX,OAFW,EAEkB;AAE7B,WAAO,IAAI,yBAAJ,CAA8B,UAA9B,EAA0C,OAA1C,CAAP;AACD;;AAZgD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}