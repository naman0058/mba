{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Convert a Browser Blob object into ArrayBuffer.\n *\n * @param blob -\n */\nexport async function blobToArrayBuffer(blob) {\n  const fileReader = new FileReader();\n  return new Promise((resolve, reject) => {\n    fileReader.onloadend = ev => {\n      resolve(ev.target.result);\n    };\n\n    fileReader.onerror = reject;\n    fileReader.readAsArrayBuffer(blob);\n  });\n}\n/**\n * Convert a Browser Blob object into string.\n *\n * @param blob -\n */\n\nexport async function blobToString(blob) {\n  const fileReader = new FileReader();\n  return new Promise((resolve, reject) => {\n    fileReader.onloadend = ev => {\n      resolve(ev.target.result);\n    };\n\n    fileReader.onerror = reject;\n    fileReader.readAsText(blob);\n  });\n}\nexport function streamToBuffer() {\n  /* empty */\n}\nexport function streamToBuffer2() {\n  /* empty */\n}\nexport function readStreamToLocalFile() {\n  /* empty */\n}\nexport const fsStat = function stat() {\n  /* empty */\n};\nexport const fsCreateReadStream = function createReadStream() {\n  /* empty */\n};","map":{"version":3,"sources":["../../../../src/utils/utils.browser.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA;;;;AAIG;AACH,OAAO,eAAe,iBAAf,CAAiC,IAAjC,EAA2C;AAChD,QAAM,UAAU,GAAG,IAAI,UAAJ,EAAnB;AACA,SAAO,IAAI,OAAJ,CAAyB,CAAC,OAAD,EAAU,MAAV,KAAoB;AAClD,IAAA,UAAU,CAAC,SAAX,GAAwB,EAAD,IAAY;AACjC,MAAA,OAAO,CAAC,EAAE,CAAC,MAAH,CAAW,MAAZ,CAAP;AACD,KAFD;;AAGA,IAAA,UAAU,CAAC,OAAX,GAAqB,MAArB;AACA,IAAA,UAAU,CAAC,iBAAX,CAA6B,IAA7B;AACD,GANM,CAAP;AAOD;AAED;;;;AAIG;;AACH,OAAO,eAAe,YAAf,CAA4B,IAA5B,EAAsC;AAC3C,QAAM,UAAU,GAAG,IAAI,UAAJ,EAAnB;AACA,SAAO,IAAI,OAAJ,CAAoB,CAAC,OAAD,EAAU,MAAV,KAAoB;AAC7C,IAAA,UAAU,CAAC,SAAX,GAAwB,EAAD,IAAY;AACjC,MAAA,OAAO,CAAC,EAAE,CAAC,MAAH,CAAW,MAAZ,CAAP;AACD,KAFD;;AAGA,IAAA,UAAU,CAAC,OAAX,GAAqB,MAArB;AACA,IAAA,UAAU,CAAC,UAAX,CAAsB,IAAtB;AACD,GANM,CAAP;AAOD;AAED,OAAM,SAAU,cAAV,GAAwB;AAC5B;AACD;AAED,OAAM,SAAU,eAAV,GAAyB;AAC7B;AACD;AAED,OAAM,SAAU,qBAAV,GAA+B;AACnC;AACD;AAED,OAAO,MAAM,MAAM,GAAG,SAAS,IAAT,GAAa;AACjC;AACD,CAFM;AAIP,OAAO,MAAM,kBAAkB,GAAG,SAAS,gBAAT,GAAyB;AACzD;AACD,CAFM","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Convert a Browser Blob object into ArrayBuffer.\n *\n * @param blob -\n */\nexport async function blobToArrayBuffer(blob: Blob): Promise<ArrayBuffer> {\n  const fileReader = new FileReader();\n  return new Promise<ArrayBuffer>((resolve, reject) => {\n    fileReader.onloadend = (ev: any) => {\n      resolve(ev.target!.result);\n    };\n    fileReader.onerror = reject;\n    fileReader.readAsArrayBuffer(blob);\n  });\n}\n\n/**\n * Convert a Browser Blob object into string.\n *\n * @param blob -\n */\nexport async function blobToString(blob: Blob): Promise<string> {\n  const fileReader = new FileReader();\n  return new Promise<string>((resolve, reject) => {\n    fileReader.onloadend = (ev: any) => {\n      resolve(ev.target!.result);\n    };\n    fileReader.onerror = reject;\n    fileReader.readAsText(blob);\n  });\n}\n\nexport function streamToBuffer(): void {\n  /* empty */\n}\n\nexport function streamToBuffer2(): void {\n  /* empty */\n}\n\nexport function readStreamToLocalFile(): void {\n  /* empty */\n}\n\nexport const fsStat = function stat(): void {\n  /* empty */\n};\n\nexport const fsCreateReadStream = function createReadStream(): void {\n  /* empty */\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}