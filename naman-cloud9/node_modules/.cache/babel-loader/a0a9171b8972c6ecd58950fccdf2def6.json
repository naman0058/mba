{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param iRange -\n */\nexport function rangeToString(iRange) {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(`Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`);\n  }\n\n  return iRange.count ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}` : `bytes=${iRange.offset}-`;\n}","map":{"version":3,"sources":["../../../src/Range.ts"],"names":[],"mappings":"AAAA;AACA;;AAkBA;;;;;;AAMG;AACH,OAAM,SAAU,aAAV,CAAwB,MAAxB,EAAqC;AACzC,MAAI,MAAM,CAAC,MAAP,GAAgB,CAApB,EAAuB;AACrB,UAAM,IAAI,UAAJ,CAAe,wCAAf,CAAN;AACD;;AACD,MAAI,MAAM,CAAC,KAAP,IAAgB,MAAM,CAAC,KAAP,IAAgB,CAApC,EAAuC;AACrC,UAAM,IAAI,UAAJ,CACJ,mGADI,CAAN;AAGD;;AACD,SAAO,MAAM,CAAC,KAAP,GACH,SAAS,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,KAAvB,GAA+B,CAAC,EADvD,GAEH,SAAS,MAAM,CAAC,MAAM,GAF1B;AAGD","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Range for Blob Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-blob-service-operations\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param iRange -\n */\nexport function rangeToString(iRange: Range): string {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`\n    );\n  }\n  return iRange.count\n    ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n    : `bytes=${iRange.offset}-`;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}